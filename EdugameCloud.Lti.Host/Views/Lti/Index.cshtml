@model EdugameCloud.Lti.DTO.LtiViewModelDto
@using Jil;
@{
	Layout = null;

	var options = EdugameCloud.Lti.JilSerializer.JilOptions;
}
<!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8">
	<title>eSyncTraining</title>
	<style type="text/css">#loading{position:absolute;margin:auto;top:0;left:0;right:0;bottom:0;border-radius:10px;box-shadow:0 5px 10px #ccc;z-index:2;width:400px;height:200px;font-family:Verdana;background-color:#f0f0f0}#loading #loading-bbar{width:380px;background-color:#5c6c78;padding:10px;color:#fff;font-size:12px;bottom:0;position:absolute;border-bottom-left-radius:10px;border-bottom-right-radius:10px}#loading #loading-tbar{width:100%;text-align:center}#loading #loading-title{color:#5c6c78;font-size:24px;line-height:24px}#loading #loading-preloader{margin:15px;width:70px;height:70px}#loading #loading-version{float:left}#loading #loading-copyright{float:right}#loading #loading-link{color:#FFF;text-decoration:underline;cursor:pointer}</style>
	@if (Model.LicenceSettings.HasMp4ServiceLicenseKey || Model.LicenceSettings.HasMp4ServiceWithSubtitlesLicenseKey) {
	<link rel="stylesheet" href="extjs/resources/libs/videojs/style.css" />
	<link rel="stylesheet" href="extjs/resources/libs/videojs/video-js.min.css" />
}
	<script type="text/javascript">
		var EsyncLti = @Html.Raw(JSON.Serialize(Model, options));
		EsyncLti.ActionUrls = {
			//"getMP4Recordings": "lti-mp4/recordings",
			"convertRecording": "lti-mp4/mp4/convert",
			"convertRecordingWithSubtitles": "lti-mp4/mp4/convertWithSubtitles",
			"getRecordingStatus": "lti-mp4/recordings/status",

            "getRecordings": "lti/recordings", // API   + "lti-mp4/recordings"
            "publishRecording": "lti/recordings/publish", // API
            "unpublishRecording": "lti/recordings/unpublish", // API
            "shareRecording": "lti/recordings/share", // API
            "editRecording": "lti/recordings/edit/{0}",  // API
            "deleteRecording": "lti/recordings/delete/{0}", // API
            "joinRecording": "lti/Recordings/Join/{0}", // get
            "getRecordingFLV": "Recordings/GetFlv", // get

			"getUsersForMeeting": "lti/users", // API
			"createACUser": "lti/acNewUser", // API
            "searchACUser": "lti/acSearchUser", // API
			"setDefaultACRoles": "lti/meeting/SetDefaultACRoles", //API
            "setUserRole": "lti/users/update", // API
			"removeUserFromMeeting": "lti/users/removefrommeeting", // API

            "createEventsBatch": "lti/calendar/createBatch", // API
            "getEvents": "lti/calendar/getevents", // API
            "creatEevent": "lti/calendar/createevent", // API
            "savEevent": "lti/calendar/saveevent", // API
            "deleteEvent": "lti/calendar/deleteevent", // API

			"getContentShortcuts": "lti-my-content/{0}/shortcuts",
			"getFolderContent": "lti-my-content/{0}/content/{1}",
			"downloadContent": "lti-my-content/{0}/content/{1}/download",
			"deleteContent": "lti-my-content/{0}/content/{1}/delete",
			"editContent": "lti-my-content/{0}/content/{1}/edit",
			"moveContent": "lti-my-content/{0}/content/{1}/move-to/{2}",
			"createContentFolder": "lti-my-content/{0}/content/{1}/create-sub-folder",

			"checkSettingsPasword": "lti/settings/checkpass", // API
			"saveSettings": "lti/settings/save", // API

			"joinToMeeting": "lti/meeting/join",
			"joinToMeetingMobile": "lti/meeting/joinmobile",
			"leaveMeeting": "lti/meeting/leave", // API
			"deleteMeeting": "lti/meeting/delete",
			"saveMeetingAndGetUsers": "lti/meeting/UpdateAndReturnLmsUsers",
			"saveMeeting": "lti/meeting/Update",

			"useExistingMeeting": "lti/useExistingMeeting",
			"getTemplates": "lti/templates", // API
			"getAudioProfiles": "lti/AudioProfiles", // API
			"searchACMeetings": "lti/acSearchMeeting", // API

            "saveSeminar": "lti/seminars/edit", // API
            "createSeminar": "lti/seminars/create", // API
            "createSeminarSession": "lti/seminars/sessions/create", // API
            "saveSeminarSession": "lti/seminars/sessions/edit", // API
            "deleteSeminarSession": "lti/seminars/sessions/delete",  // API

            "reportByRecordings": "lti/meeting/reports/by-recordings", // API
            "reportBySessions": "lti/meeting/reports/by-sessions", // API
            "reportByAttendance": "lti/meeting/reports/by-attendance" // API
		};

		var Ext = Ext || {};
		Ext.manifest = {
		    "js": [{ "path": "extjs/app_@(Model.FullVersion.ToString()).js" }],
		    "css": [{ "path": "extjs/resources/MeetingSetup-all_@(Model.FullVersion.ToString()).css" }]
		};
	</script>
	
	<script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
	<script>window.jQuery || document.write('<script src="extjs/resources/libs/jquery-3.1.1.min.js">\x3C/script>')</script>
	<script type="text/javascript" src="extjs/resources/localization/localization.js"></script>
@if (Model.LicenceSettings.HasMp4ServiceLicenseKey || Model.LicenceSettings.HasMp4ServiceWithSubtitlesLicenseKey) {
	<script type="text/javascript" src="extjs/resources/libs/videojs/video.min.js"></script>
	<script type="text/javascript" src="extjs/resources/libs/vtt.js"></script>
}
	<script id="microloader" data-app="1ae6d2ff-075c-46b8-b3c0-05ccc4e72e8f" src="extjs/microloader.js"></script>
</head>
<body>
	<div id="loading">
		<div id="loading-tbar">
			<img id="loading-preloader" src="extjs/resources/preloader.GIF" /> <br />
			<span id="loading-title" style="">Loading LTI application</span>
		</div>
		<div id="loading-bbar">
			<span id="loading-version"></span>
			<span id="loading-copyright">Developed by eSyncTraining</span>
		</div>
	</div>
</body>
</html>