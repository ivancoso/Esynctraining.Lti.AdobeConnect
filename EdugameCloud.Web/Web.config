<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="mailerSettings" type="Esynctraining.Core.Providers.Mailer.Configuration.MailerConfigurationSection, Esynctraining.Core" />
    
  <sectionGroup name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection, DotNetOpenAuth.Core">
			<section name="messaging" type="DotNetOpenAuth.Configuration.MessagingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
			<section name="reporting" type="DotNetOpenAuth.Configuration.ReportingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
		<section name="openid" type="DotNetOpenAuth.Configuration.OpenIdElement, DotNetOpenAuth.OpenId" requirePermission="false" allowLocation="true" /><section name="oauth" type="DotNetOpenAuth.Configuration.OAuthElement, DotNetOpenAuth.OAuth" requirePermission="false" allowLocation="true" /></sectionGroup></configSections>

  <appSettings>
    <add key="vs:EnableBrowserLink" value="false" />
    <add key="webpages:Version" value="2.0.0.1" />
    <add key="webpages:Enabled" value="false" />
    <add key="PreserveLoginUrl" value="true" />
    <add key="SocialSubscriptionsEnabled" value="false" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
    <add key="RouteDebugger:Enabled" value="false" />
    <add key="PermFilePattern" value="{fileId}.bin" />
    <add key="FileStorage" value="c:\NET\EdugameCloud.Dev\services\FileStorage" />
    <add key="ImportSubPath" value="import" />
    <add key="ExportSubPath" value="export" />
    <add key="SchemasSubPath" value="schemas" />
    <add key="BasePath" value="http://dev.edugamecloud.com/" />
    <add key="BaseServiceUrl" value="http://dev.edugamecloud.com/" />
    <add key="PortalUrl" value="http://dev.edugamecloud.com/" />
    <add key="EraseEnabled" value="false" />
    <add key="BuildSelector" value="Adm_EdugameCloud_*.swf" />
    <add key="PublicBuildSelector" value="EduGameCloud_*.zip" />
    <add key="MobileBuildSelector" value="EduGameCloudMobile_*.zip" />
    <add key="TrialContactEmail" value="eugene@esynctraining.com" />
    <add key="BatchImportDefaultTimeZoneId" value="8" />
    <add key="BatchImportDefaultLanguageId" value="5" />
    <add key="MaxImageWidth" value="800" />
    <add key="MaxImageHeight" value="600" />

    <add key="FBAppId" value="empty" />
    <add key="FBAppSecret" value="empty" />
    <add key="TWConsumerKey" value="empty" />
    <add key="TWConsumerSecret" value="empty" />
    <add key="InstagramClientId" value="empty" />
    <add key="InstagramClientSecret" value="empty" />

    <!--
    Not In Use:
    <add key="FBAppId" value="396671547112882" />
    <add key="FBAppSecret" value="124c91b81000fd9f8738fa5e1975fd58" />
    <add key="TWConsumerKey" value="bl4UsZpTGNaxzFY9Orp7czgnr" />
    <add key="TWConsumerSecret" value="c4djFn7rEN10cJJfWjcF3N7f4LmNNMrR2YjSKDByXiCJD2761p" />
    <add key="InstagramClientId" value="cbe78ceb43b74b88bad0fb9979a3d924" />
    <add key="InstagramClientSecret" value="ee3536abb5e14d9e8b9ef69352004d5a" />-->

    <!--<add key="CanvasClientId" value="170000000000182" />-->
    <!--<add key="CanvasClientSecret" value="DbP6AGWEdvBystK6hs7LhM6vYZdjvs6MqZRH84Xr3IR2MPwTSwXT0MHqp5sYFiNe" />-->
    <!--Canvas developer keys
    <add key="CanvasClientId" value="10000000000002" />-->
    <!--<add key="CanvasClientSecret" value="s9YDrOugAq3eMBqblVbnbi9RlVvDDAeUTjP79NwGlxrAZcM9SGihUH8VlBZ8E3iy" />-->

    <add key="CanvasClientId" value="170000000000180" />
    <add key="CanvasClientSecret" value="BegNrN5U3ChgPALe5l0hLMJnRUY6jBnMkTIzhA9LiwC0goWu8tqI5pwMoX3hF2on" />
    <add key="D2LApiVersion" value="1.4" />
    <add key="D2LApiKey" value="dTrjhraYSvSn5LvsODpBng" />
    <add key="D2LApiSecret" value="AAQWJpEWPjCCuZcFFv5Prw" />
    <add key="IsDebug" value="false" />
    <add key="BrainHoneyApiUrl" value="http://gls.agilix.com/dlap.ashx" />
    <add key="MoodleTokenUrl" value="/login/token.php" />
    <add key="MoodleServiceUrl" value="/webservice/rest/server.php" />
    <add key="MoodleChangeUrl" value="false" />
    <add key="UserCacheValidTimeout" value="00:05:00" />
    <!--5 min-->
    <add key="InitialBBPassword" value="e$ync123" />
  
  
    <!-- UsersSetup: disabled|database|connect -->
    <add key="Lti_AcUserCache_Mode" value="database" />
  </appSettings>
  <connectionStrings configSource="Web.constrings" />
  <system.web>
    <globalization culture="en-US" uiCulture="en-US" />
    <httpRuntime executionTimeout="99999999999" maxRequestLength="10240" />
    <compilation debug="true" defaultLanguage="c#" targetFramework="4.0" />
    <customErrors mode="Off" />
    <pages controlRenderingCompatibilityVersion="4.0"></pages>
    <authentication mode="Forms">
      <forms loginUrl="~/" timeout="1440" slidingExpiration="false" defaultUrl="~/" name="EdugameCloud_Auth" />
    </authentication>
  </system.web>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <security>
      <requestFiltering>
        <requestLimits maxAllowedContentLength="10485760"></requestLimits>
        <hiddenSegments>
          <add segment="Logs" />
        </hiddenSegments>
      </requestFiltering>
    </security>

    <handlers>
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" />
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" />
      <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness32" responseBufferLimit="0" />
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework64\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness64" responseBufferLimit="0" />
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
    </handlers>

    <modules runAllManagedModulesForAllRequests="true">
      <remove name="PerRequestLifestyle" />
      <add name="PerRequestLifestyle" type="Castle.MicroKernel.Lifestyle.PerWebRequestLifestyleModule, Castle.Windsor, Version=3.3.0.0, Culture=neutral, PublicKeyToken=407dd0808d44fbdc" />
    </modules>
    
    <staticContent>
      <remove fileExtension=".json" />
      <mimeMap fileExtension=".json" mimeType="application/json" />
      <mimeMap fileExtension=".appcache" mimeType="text/cache-manifest" />
    </staticContent>

    <httpProtocol>
      <customHeaders>
        <add name="Access-Control-Allow-Origin" value="*" />
        <add name="Access-Control-Allow-Methods" value="GET, POST, PUT, DELETE, OPTIONS" />
        <add name="Access-Control-Allow-Headers" value="X-Requested-With, Content-Type, SOAPAction, Accept, Origin" />
        <add name="Access-Control-Max-Age" value="1728000" />
        <!-- A little extra security (by obscurity) -->
        <remove name="X-Powered-By" />
      </customHeaders>
    </httpProtocol>
  </system.webServer>

  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="RazorEngine" publicKeyToken="9EE697374C7E744A" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.6.3.0" newVersion="3.6.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="NHibernate" publicKeyToken="AA95F207798DFDB4" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.4000" newVersion="4.0.0.4000" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Castle.Windsor" publicKeyToken="407DD0808D44FBDC" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.3.0.0" newVersion="3.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Castle.Facilities.WcfIntegration" publicKeyToken="407DD0808D44FBDC" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.3.0.0" newVersion="3.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Castle.Core" publicKeyToken="407DD0808D44FBDC" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.3.0.0" newVersion="3.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Core" publicKeyToken="b77a5c561934e089" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Net.Http" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.2.29.0" newVersion="2.2.29.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="DotNetOpenAuth.AspNet" publicKeyToken="2780ccd10d57b246" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="DotNetOpenAuth.Core" publicKeyToken="2780ccd10d57b246" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.6.5135.21930" newVersion="1.6.5135.21930" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Antlr3.Runtime" publicKeyToken="eb42632606e9261f" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.5.0.2" newVersion="3.5.0.2" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="RazorEngine" publicKeyToken="9ee697374c7e744a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.6.4.0" newVersion="3.6.4.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.1" newVersion="4.0.0.1" />
      </dependentAssembly>
    </assemblyBinding>
    <!-- This prevents the Windows Event Log from frequently logging that HMAC1 is being used (when the other party needs it). -->
    <legacyHMACWarning enabled="0" />
    </runtime>
  <mailerSettings templatesFolderPath="~/mail/templates/" attachmentsFolderPath="~/mail/attachments/" />
  <system.net>
    <mailSettings>
      <smtp from="admin@esynctraining.com" deliveryMethod="Network">
        <network host="192.168.10.76" port="25" userName="esyncadmin" password="$Pr!DHEgsP4" />
      </smtp>
    </mailSettings>

  <defaultProxy enabled="true" /><settings>
			<!-- This setting causes .NET to check certificate revocation lists (CRL) 
			     before trusting HTTPS certificates.  But this setting tends to not 
			     be allowed in shared hosting environments. -->
			<!--<servicePointManager checkCertificateRevocationList="true"/>-->
		</settings></system.net>
  
<dotNetOpenAuth>
		<messaging>
			<untrustedWebRequest>
				<whitelistHosts>
					<!-- Uncomment to enable communication with localhost (should generally not activate in production!) -->
					<!--<add name="localhost" />-->
				</whitelistHosts>
			</untrustedWebRequest>
		</messaging>
		<!-- Allow DotNetOpenAuth to publish usage statistics to library authors to improve the library. -->
		<reporting enabled="true" />
	<!-- This is an optional configuration section where aspects of dotnetopenauth can be customized. --><!-- For a complete set of configuration options see http://www.dotnetopenauth.net/developers/code-snippets/configuration-options/ --><openid>
		<relyingParty>
				<security requireSsl="false">
					<!-- Uncomment the trustedProviders tag if your relying party should only accept positive assertions from a closed set of OpenID Providers. -->
					<!--<trustedProviders rejectAssertionsFromUntrustedProviders="true">
						<add endpoint="https://www.google.com/accounts/o8/ud" />
					</trustedProviders>-->
				</security>
				<behaviors>
					<!-- The following OPTIONAL behavior allows RPs to use SREG only, but be compatible
					     with OPs that use Attribute Exchange (in various formats). -->
					<add type="DotNetOpenAuth.OpenId.RelyingParty.Behaviors.AXFetchAsSregTransform, DotNetOpenAuth.OpenId.RelyingParty" />
				</behaviors>
			</relyingParty></openid></dotNetOpenAuth><uri>
		<!-- The uri section is necessary to turn on .NET 3.5 support for IDN (international domain names),
		     which is necessary for OpenID urls with unicode characters in the domain/host name.
		     It is also required to put the Uri class into RFC 3986 escaping mode, which OpenID and OAuth require. -->
		<idn enabled="All" />
		<iriParsing enabled="true" />
	</uri></configuration>
