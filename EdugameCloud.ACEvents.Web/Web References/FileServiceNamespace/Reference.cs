//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace EdugameCloud.ACEvents.Web.FileServiceNamespace {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IFileService", Namespace="http://tempuri.org/")]
    public partial class FileService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback FileUploadEndOperationCompleted;
        
        private System.Threading.SendOrPostCallback FileUploadFailedOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitializeFileUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FileService() {
            this.Url = global::EdugameCloud.ACEvents.Web.Properties.Settings.Default.EdugameCloud_ACEvents_Web_FileServiceNamespace_FileService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event FileUploadEndCompletedEventHandler FileUploadEndCompleted;
        
        /// <remarks/>
        public event FileUploadFailedCompletedEventHandler FileUploadFailedCompleted;
        
        /// <remarks/>
        public event InitializeFileUploadCompletedEventHandler InitializeFileUploadCompleted;
        
        /// <remarks/>
        public event SaveCompletedEventHandler SaveCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IFileService/FileUploadEnd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public FileDTO FileUploadEnd([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string webOrbId) {
            object[] results = this.Invoke("FileUploadEnd", new object[] {
                        webOrbId});
            return ((FileDTO)(results[0]));
        }
        
        /// <remarks/>
        public void FileUploadEndAsync(string webOrbId) {
            this.FileUploadEndAsync(webOrbId, null);
        }
        
        /// <remarks/>
        public void FileUploadEndAsync(string webOrbId, object userState) {
            if ((this.FileUploadEndOperationCompleted == null)) {
                this.FileUploadEndOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFileUploadEndOperationCompleted);
            }
            this.InvokeAsync("FileUploadEnd", new object[] {
                        webOrbId}, this.FileUploadEndOperationCompleted, userState);
        }
        
        private void OnFileUploadEndOperationCompleted(object arg) {
            if ((this.FileUploadEndCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FileUploadEndCompleted(this, new FileUploadEndCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IFileService/FileUploadFailed", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FileUploadFailed([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string webOrbId) {
            this.Invoke("FileUploadFailed", new object[] {
                        webOrbId});
        }
        
        /// <remarks/>
        public void FileUploadFailedAsync(string webOrbId) {
            this.FileUploadFailedAsync(webOrbId, null);
        }
        
        /// <remarks/>
        public void FileUploadFailedAsync(string webOrbId, object userState) {
            if ((this.FileUploadFailedOperationCompleted == null)) {
                this.FileUploadFailedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFileUploadFailedOperationCompleted);
            }
            this.InvokeAsync("FileUploadFailed", new object[] {
                        webOrbId}, this.FileUploadFailedOperationCompleted, userState);
        }
        
        private void OnFileUploadFailedOperationCompleted(object arg) {
            if ((this.FileUploadFailedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FileUploadFailedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IFileService/InitializeFileUpload", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string InitializeFileUpload([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FileDTO file) {
            object[] results = this.Invoke("InitializeFileUpload", new object[] {
                        file});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InitializeFileUploadAsync(FileDTO file) {
            this.InitializeFileUploadAsync(file, null);
        }
        
        /// <remarks/>
        public void InitializeFileUploadAsync(FileDTO file, object userState) {
            if ((this.InitializeFileUploadOperationCompleted == null)) {
                this.InitializeFileUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitializeFileUploadOperationCompleted);
            }
            this.InvokeAsync("InitializeFileUpload", new object[] {
                        file}, this.InitializeFileUploadOperationCompleted, userState);
        }
        
        private void OnInitializeFileUploadOperationCompleted(object arg) {
            if ((this.InitializeFileUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitializeFileUploadCompleted(this, new InitializeFileUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IFileService/Save", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public FileDTO Save([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FileDTO file) {
            object[] results = this.Invoke("Save", new object[] {
                        file});
            return ((FileDTO)(results[0]));
        }
        
        /// <remarks/>
        public void SaveAsync(FileDTO file) {
            this.SaveAsync(file, null);
        }
        
        /// <remarks/>
        public void SaveAsync(FileDTO file, object userState) {
            if ((this.SaveOperationCompleted == null)) {
                this.SaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveOperationCompleted);
            }
            this.InvokeAsync("Save", new object[] {
                        file}, this.SaveOperationCompleted, userState);
        }
        
        private void OnSaveOperationCompleted(object arg) {
            if ((this.SaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCompleted(this, new SaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1590.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/EdugameCloud.Core.Domain.DTO")]
    public partial class FileDTO {
        
        private System.Nullable<int> createdByField;
        
        private bool createdByFieldSpecified;
        
        private double dateCreatedField;
        
        private bool dateCreatedFieldSpecified;
        
        private string fileIdField;
        
        private string fileNameField;
        
        private System.Nullable<int> heightField;
        
        private bool heightFieldSpecified;
        
        private System.Nullable<int> widthField;
        
        private bool widthFieldSpecified;
        
        private System.Nullable<int> xField;
        
        private bool xFieldSpecified;
        
        private System.Nullable<int> yField;
        
        private bool yFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> createdBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool createdBySpecified {
            get {
                return this.createdByFieldSpecified;
            }
            set {
                this.createdByFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double dateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dateCreatedSpecified {
            get {
                return this.dateCreatedFieldSpecified;
            }
            set {
                this.dateCreatedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string fileId {
            get {
                return this.fileIdField;
            }
            set {
                this.fileIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string fileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool heightSpecified {
            get {
                return this.heightFieldSpecified;
            }
            set {
                this.heightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool widthSpecified {
            get {
                return this.widthFieldSpecified;
            }
            set {
                this.widthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool xSpecified {
            get {
                return this.xFieldSpecified;
            }
            set {
                this.xFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ySpecified {
            get {
                return this.yFieldSpecified;
            }
            set {
                this.yFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void FileUploadEndCompletedEventHandler(object sender, FileUploadEndCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FileUploadEndCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FileUploadEndCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileDTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileDTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void FileUploadFailedCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void InitializeFileUploadCompletedEventHandler(object sender, InitializeFileUploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitializeFileUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitializeFileUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void SaveCompletedEventHandler(object sender, SaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileDTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileDTO)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591