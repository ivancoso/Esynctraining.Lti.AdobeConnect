//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace EdugameCloud.ACEvents.Web.AcDomainsNamespace {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_ICompanyAcDomainsService", Namespace="http://tempuri.org/")]
    public partial class CompanyAcDomainsService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllByCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CompanyAcDomainsService() {
            this.Url = global::EdugameCloud.ACEvents.Web.Properties.Settings.Default.EdugameCloud_ACEvents_Web_AcDomainsNamespace_CompanyAcDomainsService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetByIdCompletedEventHandler GetByIdCompleted;
        
        /// <remarks/>
        public event GetAllByCompanyCompletedEventHandler GetAllByCompanyCompleted;
        
        /// <remarks/>
        public event DeleteByIdCompletedEventHandler DeleteByIdCompleted;
        
        /// <remarks/>
        public event SaveCompletedEventHandler SaveCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICompanyAcDomainsService/GetById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ACDomainDTO GetById(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified) {
            object[] results = this.Invoke("GetById", new object[] {
                        id,
                        idSpecified});
            return ((ACDomainDTO)(results[0]));
        }
        
        /// <remarks/>
        public void GetByIdAsync(int id, bool idSpecified) {
            this.GetByIdAsync(id, idSpecified, null);
        }
        
        /// <remarks/>
        public void GetByIdAsync(int id, bool idSpecified, object userState) {
            if ((this.GetByIdOperationCompleted == null)) {
                this.GetByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetByIdOperationCompleted);
            }
            this.InvokeAsync("GetById", new object[] {
                        id,
                        idSpecified}, this.GetByIdOperationCompleted, userState);
        }
        
        private void OnGetByIdOperationCompleted(object arg) {
            if ((this.GetByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetByIdCompleted(this, new GetByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICompanyAcDomainsService/GetAllByCompany", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/EdugameCloud.Core.Domain.DTO")]
        public ACDomainDTO[] GetAllByCompany(int companyId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool companyIdSpecified) {
            object[] results = this.Invoke("GetAllByCompany", new object[] {
                        companyId,
                        companyIdSpecified});
            return ((ACDomainDTO[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllByCompanyAsync(int companyId, bool companyIdSpecified) {
            this.GetAllByCompanyAsync(companyId, companyIdSpecified, null);
        }
        
        /// <remarks/>
        public void GetAllByCompanyAsync(int companyId, bool companyIdSpecified, object userState) {
            if ((this.GetAllByCompanyOperationCompleted == null)) {
                this.GetAllByCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllByCompanyOperationCompleted);
            }
            this.InvokeAsync("GetAllByCompany", new object[] {
                        companyId,
                        companyIdSpecified}, this.GetAllByCompanyOperationCompleted, userState);
        }
        
        private void OnGetAllByCompanyOperationCompleted(object arg) {
            if ((this.GetAllByCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllByCompanyCompleted(this, new GetAllByCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICompanyAcDomainsService/DeleteById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteById(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified, out int DeleteByIdResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteByIdResultSpecified) {
            object[] results = this.Invoke("DeleteById", new object[] {
                        id,
                        idSpecified});
            DeleteByIdResult = ((int)(results[0]));
            DeleteByIdResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DeleteByIdAsync(int id, bool idSpecified) {
            this.DeleteByIdAsync(id, idSpecified, null);
        }
        
        /// <remarks/>
        public void DeleteByIdAsync(int id, bool idSpecified, object userState) {
            if ((this.DeleteByIdOperationCompleted == null)) {
                this.DeleteByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteByIdOperationCompleted);
            }
            this.InvokeAsync("DeleteById", new object[] {
                        id,
                        idSpecified}, this.DeleteByIdOperationCompleted, userState);
        }
        
        private void OnDeleteByIdOperationCompleted(object arg) {
            if ((this.DeleteByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteByIdCompleted(this, new DeleteByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICompanyAcDomainsService/Save", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ACDomainDTO Save([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ACDomainDTO acDomain) {
            object[] results = this.Invoke("Save", new object[] {
                        acDomain});
            return ((ACDomainDTO)(results[0]));
        }
        
        /// <remarks/>
        public void SaveAsync(ACDomainDTO acDomain) {
            this.SaveAsync(acDomain, null);
        }
        
        /// <remarks/>
        public void SaveAsync(ACDomainDTO acDomain, object userState) {
            if ((this.SaveOperationCompleted == null)) {
                this.SaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveOperationCompleted);
            }
            this.InvokeAsync("Save", new object[] {
                        acDomain}, this.SaveOperationCompleted, userState);
        }
        
        private void OnSaveOperationCompleted(object arg) {
            if ((this.SaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCompleted(this, new SaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1590.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/EdugameCloud.Core.Domain.DTO")]
    public partial class ACDomainDTO {
        
        private int companyIdField;
        
        private bool companyIdFieldSpecified;
        
        private int domainIdField;
        
        private bool domainIdFieldSpecified;
        
        private bool isDefaultField;
        
        private bool isDefaultFieldSpecified;
        
        private string passwordField;
        
        private string pathField;
        
        private string userField;
        
        /// <remarks/>
        public int companyId {
            get {
                return this.companyIdField;
            }
            set {
                this.companyIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool companyIdSpecified {
            get {
                return this.companyIdFieldSpecified;
            }
            set {
                this.companyIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int domainId {
            get {
                return this.domainIdField;
            }
            set {
                this.domainIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool domainIdSpecified {
            get {
                return this.domainIdFieldSpecified;
            }
            set {
                this.domainIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool isDefault {
            get {
                return this.isDefaultField;
            }
            set {
                this.isDefaultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isDefaultSpecified {
            get {
                return this.isDefaultFieldSpecified;
            }
            set {
                this.isDefaultFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string user {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void GetByIdCompletedEventHandler(object sender, GetByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ACDomainDTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ACDomainDTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void GetAllByCompanyCompletedEventHandler(object sender, GetAllByCompanyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllByCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllByCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ACDomainDTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ACDomainDTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void DeleteByIdCompletedEventHandler(object sender, DeleteByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int DeleteByIdResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool DeleteByIdResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void SaveCompletedEventHandler(object sender, SaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ACDomainDTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ACDomainDTO)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591