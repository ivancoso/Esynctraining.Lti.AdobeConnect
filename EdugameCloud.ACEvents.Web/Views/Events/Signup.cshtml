@model EdugameCloud.ACEvents.Web.Models.EventModel

@*@section Scripts
    {
        @Scripts.Render("~/bundles/jqueryval")
    }*@

<script type="text/javascript">


    var onStateSelected = function (e) {
        if ($('#State').val() !== "0") {
            $('#School').removeAttr('disabled');
            var stateCode = $('#State').val();
            var getSchoolsUrl = '@Url.Action("GetSchoolPerState","Events")';
            $.get(getSchoolsUrl + "?stateCode=" + stateCode).done(function (data) {
                $('#School').empty();
                $.each(data,
                    function (index, school) {
                        $("#School").append("<option value='" +
                            school.SchoolNumber +
                            "'>" +
                            school.AccountName +
                            "</option>");
                    });

            }).fail(function (err) {
                console.log('error occurred ' + err);
            });
        } else {
            $('#School').attr('disabled', 'disabled');
        }

    }

    $(document).ready(function () {
        $('.alert .close').on('click',
            function (e) {
                $(this).parent().hide();
            });

        $('#eventRegister').click(function (e) {
            var form = $('form');
            e.preventDefault();
            form.validate();
            if (form.valid()) {
                
                var data = form.serialize();
                var url = '@Url.Action("EventRegister", "Events")';
                debugger;
                $.ajax({
                    type: "POST",
                    url: url,
                    data: data,
                    dataType: 'json',
                    success: function (result) {
                        debugger;
                        if (result.IsSuccess) {
                            $('#success').show().fadeOut(20000);
                        } else {
                            //$('#errorMessage').html(result.Message);
                            $('#errorMessage').html("<span class='red'><b>" + result.Message + "</b></span>").closest('div').show().fadeOut(20000);
                        }
                    },
                    error: function (e, a, b, ctx, d) {
                        debugger;
                        console.log(e);
                    }
                });
            }
        });
    });




</script>

<div class="row">
    <div class="col-lg-offset-1" style="margin-left: 140px">
        @*<img src="~/Content/img/GSILogo-Tag-Blue.jpg" />*@
        <img src="~/Content/img/GSU-2012-560x230-01.jpg" />
    </div>
</div>

<div class="alert alert-success" id="success" style="display:none;">
    <strong>Success!</strong> You have registered to the event!
</div>

<div class="alert fade in" style="display:none;">
    <button type="button" class="close">×</button>
    <span id="errorMessage"></span>
</div>

<div class="row">
    <div class="col-lg-7 col-lg-offset-5 center-block">


        <div class="col-lg-offset-5">
            <h2>@Model.EventName</h2>
            <br />
            <label>@Model.StartDate.ToUniversalTime() - @Model.EndDate.ToUniversalTime()</label>
            <br />
            <br />
        </div>

        @*@using (Html.BeginForm("EventRegister", "Events", FormMethod.Post, new {@class = "form-horizontal", role = "form"}))
            {*@
        <form class="form-horizontal">

            @Html.HiddenFor(x => x.EventQuizMappingId)
            @*@Html.AntiForgeryToken()*@
            @Html.ValidationSummary(true)

            <div class="form-group">
                <label class="col-sm-5 control-label">Email address *</label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(m => m.Email, new {@class = "form-control", placeholder = "Email", tabindex = 1})
                    @Html.ValidationMessageFor(m => m.Email)
                </div>

            </div>

            <div class="form-group">
                <label class="col-sm-5 control-label">First Name *</label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(m => m.FirstName, new {@class = "form-control", placeholder = "First Name", tabindex = 1})
                    @Html.ValidationMessageFor(m => m.FirstName)
                </div>

            </div>

            <div class="form-group">
                <label class="col-sm-5 control-label">Last Name *</label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(m => m.LastName, new {@class = "form-control", placeholder = "Last Name", tabindex = 1})
                    @Html.ValidationMessageFor(m => m.LastName)
                </div>

            </div>

            <div class="form-group">
                <label class="col-sm-5 control-label">Password *</label>
                <div class="col-sm-7">
                    @Html.PasswordFor(m => m.Password, new {@class = "form-control", placeholder = "Password", tabindex = 1})
                    @Html.ValidationMessageFor(m => m.Password)
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-5 control-label">Verify Password *</label>
                <div class="col-sm-7">
                    @Html.PasswordFor(m => m.VerifyPassword, new {@class = "form-control", placeholder = "Verify Password", tabindex = 1})
                    @Html.ValidationMessageFor(m => m.VerifyPassword)
                </div>
            </div>

            @*<div class="form-group">
                    <label class="col-sm-5 control-label">Country</label>
                    <div class="col-sm-7">
                        <label class="control-label">USA</label>
                    </div>
                </div>*@

            <div class="form-group">
                <label class="col-sm-5 control-label">State *</label>
                <div class="col-sm-7">
                    @Html.DropDownListFor(x => x.State, Model.States, new {@class = "form-control", onchange = "onStateSelected()"})
                    @Html.ValidationMessageFor(m => m.State)
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-5 control-label">School *</label>
                <div class="col-sm-7">
                    @Html.DropDownListFor(x => x.School, Model.Schools, new {@class = "form-control", @disabled = "disabled"})
                    @Html.ValidationMessageFor(m => m.School)
                </div>
            </div>

            @*@Html.LinkButton("Register", new { @class = "btn btn-default" })*@
            <div class="col-lg-offset-9">
                <input id="eventRegister" type="submit" value="Register" class="btn btn-default" />
            </div>
        </form>
        @*}*@
    </div>
</div>