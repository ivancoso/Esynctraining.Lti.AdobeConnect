@model EdugameCloud.Sakai.TestClient.Models.SakaiParameters
@{
    ViewBag.Title = "Home";
}
@section scripts {
    <script src="//code.jquery.com/jquery-1.10.1.min.js"></script>
    <script>
        $(document).ready(function () {
           
            $('#result').removeClass("prettyprinted");
            PR.prettyPrint();
        });
    </script>
    <script src="//cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js"></script>
}
@*<div class="jumbotron">
    <h1>Sakai Service Test Client</h1>
</div>*@

<div class="row">
    <div class="col-md-12">
        <h2>Getting started</h2>
        @*@using (Html.BeginForm()) {

            @Html.EditorFor(m => m)
            <p>
                <input type="submit" value="Call Sakai" />
            </p>
        }*@
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.ServiceUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ServiceUrl, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ServiceUrl, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ConsumerKey, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ConsumerKey, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConsumerKey, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SharedSecret, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SharedSecret, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SharedSecret, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.lis_result_sourcedid, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.lis_result_sourcedid, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.lis_result_sourcedid, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.OAuthSignatureMethod, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.OAuthSignatureMethod, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OAuthSignatureMethod, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.OAuthVersion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.OAuthVersion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OAuthVersion, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LtiVersion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LtiVersion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LtiVersion, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LtiMessageType, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LtiMessageType, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LtiMessageType, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="CALL SAKAI" class="btn btn-default" />
                    </div>
                </div>

                @if (!string.IsNullOrWhiteSpace(Model.RequestParams)) {

                <div class="form-group">
                    @Html.LabelFor(model => model.RequestParams, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DisplayFor(model => model.RequestParams, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ResponseString, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <pre id="result" class="prettyprint lang-xml">@Model.ResponseString</pre>
                        @*@Html.DisplayFor(model => model.ResponseString, new { htmlAttributes = new { @class = "form-control prettyprint lang-xml" } })*@
                    </div>
                </div>
                }
            </div>
        }
    </div>
</div>